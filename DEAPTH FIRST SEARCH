#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int adj[MAX][MAX]; // Adjacency matrix
int visited[MAX];  // Visited array

void dfs(int vertex, int vertices) {
    printf("%d ", vertex);
    visited[vertex] = 1;

    for (int i = 0; i < vertices; i++) {
        if (adj[vertex][i] == 1 && !visited[i]) {
            dfs(i, vertices);
        }
    }
}

int main() {
    int vertices, edges, u, v, start, i;

    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);

    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    // Initialize adjacency matrix
    for (i = 0; i < vertices; i++)
        for (int j = 0; j < vertices; j++)
            adj[i][j] = 0;

    printf("Enter the edges (u v):\n");
    for (i = 0; i < edges; i++) {
        scanf("%d %d", &u, &v);
        adj[u][v] = 1;
        adj[v][u] = 1; // For undirected graph
    }

    printf("Enter the starting vertex: ");
    scanf("%d", &start);

    for (i = 0; i < vertices; i++)
        visited[i] = 0;

    printf("DFS Traversal: ");
    dfs(start, vertices);
    printf("\n");

    return 0;
}
OUTPUT:

Enter the number of vertices: 5
Enter the number of edges: 6
Enter the edges (u v):
0 1
0 2
1 3
1 4
2 4
3 4
Enter the starting vertex: 0
DFS Traversal: 0 1 3 4 2
