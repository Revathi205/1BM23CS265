#include<stdio.h>

void bfs(int a[10][10], int n, int u) {
    int f, r, q[10], v;
    int s[10] = {0}; // Initialize all elements to 0, i.e., no node is visited
    printf("The nodes visited from %d: ", u);

   
    f = 0;
    r = -1;

   
    q[++r] = u;

    
    s[u] = 1;

    
    printf("%d ", u);

    // BFS logic
    while (f <= r) {
     
        u = q[f++];

        for (v = 0; v < n; v++) {
           
            if (a[u][v] > 0) {
                if (s[v] == 0) {
                    
                    printf("%d ", v);

                    // Mark `v` as visited
                    s[v] = 1;

                    // Enqueue `v`
                    q[++r] = v;
                }
            }
        }
    }
    printf("\n");
}

int main() {
    int n, a[10][10], source, i, j;

    printf("Enter no. of nodes: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix ");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    printf("Enter the starting node: ");
    scanf("%d", &source);

    bfs(a, n, source);

    return 0;
}
OUTPUT:
Enter no. of nodes: 4
Enter the adjacency matrix (0 for no edge, positive weight for edge):
0 2 3 0
2 0 0 4
3 0 0 5
0 4 5 0
Enter the starting node: 2
The nodes visited from 2: 2 0 3 1 
